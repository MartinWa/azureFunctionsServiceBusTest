trigger:
- master

variables:
  azureSubscription: '$(AzureSubscription)'
  azureResourceManagerConnection: '$(AzureResourceManagerConnection)'
  subscriptionId: '$(SubscriptionId)'
  location: 'West Europe'
  resourceGroupName: 'azure-functions-servicebus-test'
  functionAppName: 'azure-functions-servicebus-test'
  vmImageName: 'windows-2019'
  workingDirectory: '$(System.DefaultWorkingDirectory)'
  functionsAppserviceplanName: 'azure-functions-servicebus-test'
  functionsAppName: 'azure-functions-servicebus-test'
  functionsAppInsightsName: 'azure-functions-servicebus-test'
  storageAccountName: 'azfuncservicebustest'
  serviceBusName: 'azure-functions-servicebus-test'
  serviceBusSku: 'Standard'

stages:
- stage: ARM
  displayName: Create resources

  jobs:
  - job: ARM
    pool:
      vmImage: $(vmImageName)

    steps:
      - task: AzureResourceManagerTemplateDeployment@3
        inputs:
          deploymentScope: 'Resource Group'
          azureResourceManagerConnection: $(azureResourceManagerConnection)
          subscriptionId: $(subscriptionId)
          action: 'Create Or Update Resource Group'
          resourceGroupName: $(resourceGroupName)
          location: $(location)
          templateLocation: 'Linked artifact'
          csmFile: 'template.json'          
          overrideParameters: '-functionsAppserviceplanName $(functionsAppserviceplanName) -functionsAppName $(functionsAppName) -functionsAppInsightsName $(functionsAppInsightsName) -storageAccountName $(storageAccountName) -serviceBusName $(serviceBusName) -serviceBusSku $(serviceBusSku)'
          deploymentMode: 'Incremental'

- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: |
          $(workingDirectory)/*.csproj
        arguments: --output $(System.DefaultWorkingDirectory)/publish_output --configuration Release

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/publish_output'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(functionAppName)
    pool:
      vmImage: $(vmImageName)

    strategy:
      runOnce:
        deploy:

          steps:
          - task: AzureFunctionApp@1
            displayName: 'Azure functions app deploy'
            inputs:
              azureSubscription: '$(azureSubscription)'
              appType: functionApp
              appName: $(functionAppName)
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'